#include"stdio.h"
#include"stdlib.h"
#include"string.h"	
#include"time.h"
#include"sys/types.h"
#include"sys/wait.h"
#include"pthread.h"
#include"unistd.h"
#include"sqlite3.h"
int x;
char name[10];
char a[10];
int s;
int y;
int z;
int q;
char sql[1024];

char *errmsg;
int ret;  //常量
char error[1024];
sqlite3 *db = NULL;
char a[10],b[10],c[10],d[10];


int menu();//函数
int window();
int func();
int add();

int main()
{

	
	if(SQLITE_OK != sqlite3_open("my.db",&db)){
		printf("ERROR!\n");
		return -1;
	}
	ret = window();
	if(ret==1){
		system("clear");
		menu();
	}
	//printf("				登陆成功！\n");
	

	return 0;
}
int add()
{    
	//“” （）； ，。、%%  %%
 	printf("please input id\n");
     scanf("%d",&x);
     printf("please input name\n");
     getchar();
	gets(name);
     printf("请输入学生性别\n");
     scanf("%d",&s);
     printf("请输入学生地址\n");
     scanf("%s",&a);
 	printf("请输入学生语文成绩\n");
     scanf("%d",&y);
     printf("请输入学生数学成绩\n");
     scanf("%d",&z);
     printf("请输入学生英语成绩\n");
     scanf("%d",&q);
	sprintf(sql,"insert into student values('%d','%s','%d','%s','%d','%d','%d');",x,name,s,a,y,z,q);
     sqlite3_exec(db, sql, NULL, NULL, NULL);
	printf("%s\n",sql);
	//sqlite3_close(db);
	return 0;
}
int callback(void *para,int f_num,char **f_value,char **f_name)
{
  int i;
  for (i=0;i<f_num;i++)
	printf("%s  ",f_name[i]);
printf("\n");
  for(i=0;i<f_num;i++)
    printf("%s   ",f_value[i]);
printf("\n");
    return 0;
}


int func(void *para, int f_num, char **f_value, char **f_name)
{
	int i;
	char *x = NULL;
	char *y = NULL;
	for(i = 0;i<f_num;i++){
		if(i == 0)		
			x = f_value[i];
		else
			y = f_value[i];
	}
	if((strcmp(c,x)==0) && (strcmp(d,y)==0))
		printf("登录成功\n");
	return 0;
}



int window()
{
	char sql[100];
	while(1){
		int num;
		system("clear");
		printf("\33[44;33m***************学生信息登录系统******************\33[0m\n");
		printf("\33[44;33m************************************************\33[0m\n");
		printf("\33[44;33m****************** 1:注册 **********************\33[0m\n");
		printf("\33[44;33m****************** 2:登陆 **********************\33[0m\n");
		printf("\33[44;33m****************** 3:退出 **********************\33[0m\n");
		printf("\33[44;33m************************************************\33[0m\n");
		if( scanf(" %d",&num) == 1 ){
			switch(num){
				case 1:{//4
					while(1){//3
						int m;
						printf("\33[43;30m1:注册帐号 2:退出注册\33[0m\n");
						if ((scanf(" %d",&m) == 1)){//2
							if( m == 2 ){//1
								break;
							}//1
							else if ( m == 1 ){//1
								printf("\33[42;30m注册账户：\33[0m");
								getchar();
								scanf("%s",a);
								printf("\33[42;30m设置密码：\33[0m");
								getchar();
								scanf("%s",b);
								sprintf(sql,"insert into user values('%s','%s');",a,b);
								sqlite3_exec(db,sql,NULL,NULL,NULL);
								printf("\33[47;34m注册完成，请返回登陆！\33[0m\n");
								break;
							}//1
							else{//1
								printf("\33[47;31m没有该选项，请重新输入！\33[0m\n");
							}//1
						}//2
						else{//2
							gets(error);
							printf("\33[47;31m输入错误，请重新输入!\33[0m\n");
							m=0;
							continue;
						}//2
					}//3
				}//4
				case 2:{
					while(1){
						int n;
						printf("\33[43;30m1:登陆帐号 2:退出登陆\33[0m\n");
						if ( scanf(" %d",&n) == 1 ){
							if( n == 2 )
								break;
							else if ( n == 1 ){
								printf("\33[42;30m输入账户：\33[0m");
								getchar();
								scanf("%s",c);
								printf("\33[42;30m输入密码：\33[0m");
								getchar();
								scanf("%s",d);
						if(SQLITE_OK==sqlite3_exec(db,"select * from user;",func,"1",NULL)){
									return 1;
								}
								else{
									printf("\33[43;37m账户或密码错误!\33[0m\n");								
								}
								/*if ( (strcmp(a,c)==0) && (strcmp(b,d)==0) ) {
									//printf("登陆成功！\n");
									return 1;
								}*/
								
							}
							else{
								printf("\33[47;31m输入错误，没有该选项！\33[0m\n");
							}	
						}
						else{
							gets(error);
							printf("\33[47;31m输入错误，请重新输入!\33[0m\n");
							n=0;
							continue;
						}
					}
					break;
				}
				case 3:{
					printf("\33[47;34m退出成功！\33[0m\n");
					return 0;
				}
				default:
				printf("\33[47;31m输入错误，没有该选项!\33[0m\n");
			}
		}
		else{
			gets(error);
			system("clear");
			printf("\33[47;31m输入错误，请重新输入!\33[0m\n");
			num=0;
			continue;
		}
	}


return 0;
}





int menu()/* 界面*/
{
	int i=0;
	char sql3[128];
        char sql4[128];
	char sql5[128];
	char sql6[128];
	int num;
	int q;
        char t[10];
	while(1){
		system("clear");
		if(i == 0){
			printf("		      登录成功\n");
			i++;
		}
		printf(" \n                    \n");
		printf("  ******************************************************\n");
		printf("  *                学生信息管理系统                    * \n");
		printf("  ******************************************************\n");
		printf("  *******************系统功能菜单***********************\n");
		printf("     *********************************************\n");
		printf("     * 1.增加学生信息    * *  2.浏览学生信息     *  \n");
		printf("     *********************************************\n");
		printf("     * 3.查询学生信息    * *  4.删除学生信息     *  \n");
		printf("     *********************************************\n");
		printf("     * 5.修改学生信息    * *  6.统计学生成绩     *  \n");
		printf("     *********************************************\n");
		printf("     * 7.退出系统        * *  请选择菜单编号:    *  \n");
		printf("     *********************************************\n");

		scanf("%d", &num);

		switch (num){

		case 1:
			system("clear");
			/*	add(); 		增加学生记录*/
			add();			
			break;
		case 2:{
			system("clear");
			while(1){
				int a;
				printf("1:按学号浏览 2：按总分浏览 3:退出浏览\n");
				if ( scanf(" %d",&a) == 1 ){
							if( a == 3 ){
								break;
							}
							else if ( a == 1 ){
								//system("clear");
								/*	browse1();	按学号浏览方法*/
																
								sprintf(sql3, "select * from student order by id");
                               					sqlite3_exec(db, sql3, callback, NULL, &errmsg);
	
							}
							else if ( a == 2 ){
								//system("clear");
								/*	browse2();	按总分浏览方法*/ 
								sprintf(sql4, "select*,Chinese+Math+English as 总分 from student order by 总分;  ");
                               					sqlite3_exec(db, sql4, callback, NULL, &errmsg);
							}
							else{
								system("clear");
								printf("输入错误，没有该选项！\n");
							}
				}
				else{
					gets(error);
					system("clear");
					printf("输入错误，请重新输入!\n");
					a=0;
					continue;
				}
			}
			break;
		}
		case 3:{
			system("clear");
			while(1){
				int b;
				printf("1:按学号查询 2：按姓名查询 3:退出查询\n");
				if ( scanf(" %d",&b) == 1 ){
							if( b == 3 ){
								break;
							}
							else if ( b == 1 ){
								system("clear");
								/*	inquire1();	按学号查询方法*/
								printf("请输入学号：\n");
                                                                scanf("%d",&q);
								sprintf(sql5, "select * from student where id=('%d'); ",q);
                               					sqlite3_exec(db, sql5, callback, NULL, &errmsg);
							}
							else if ( b == 2 ){
								system("clear");
								/*	inquire2();	按姓名查询方法*/ 
								printf("请输入姓名：\n");
                                                                scanf("%s",&t);
								sprintf(sql6, "select * from student where name='%s'; ",t);
                               					sqlite3_exec(db, sql6, callback, NULL, &errmsg);
							}
							else{
								system("clear");
								printf("输入错误，没有该选项！\n");
							}
				}
				else{
					gets(error);
					system("clear");
					printf("输入错误，请重新输入!\n");
					b=0;
					continue;
				}
			}
			break;
		}
		case 4:{
			system("clear");
			while(1){
				int c;
				printf("1:按学号删除 2：按姓名删除 3:退出删除\n");
				if ( scanf(" %d",&c) == 1 ){
							if( c == 3 ){
								break;
							}
							else if ( c == 1 ){
								system("clear");
								/*	del1();	按学号查询方法*/	
							}
							else if ( c == 2 ){
								system("clear");
								/*	del2();	按姓名查询方法*/ 
							}
							else{
								system("clear");
								printf("输入错误，没有该选项！\n");
							}
				}
				else{
					gets(error);
					system("clear");
					printf("输入错误，请重新输入!\n");
					c=0;
					continue;
				}
			}
			break;
		}
		case 5:{
			system("clear");
			while(1){
				int d;
				printf("1:按学号修改 2：按姓名修改 3:退出修改\n");
				if ( scanf(" %d",&d) == 1 ){
							if( d == 3 ){
								break;
							}
							else if ( d == 1 ){
								system("clear");
								/*	display1();	按学号修改方法*/	
							}
							else if ( d == 2 ){
								system("clear");
								/*	display2();	按姓名修改方法*/ 
							}
							else{
								system("clear");
								printf("输入错误，没有该选项！\n");
							}
				}
				else{
					gets(error);
					system("clear");
					printf("输入错误，请重新输入!\n");
					d=0;
					continue;
				}
			}
			break;
		}
		case 6:{
			system("clear");
			while(1){
				int e;
				printf("1:按语文统计 2：按数学统计  3:按英语统计 4:退出统计\n");
				if ( scanf(" %d",&e) == 1 ){
							if( e == 4 ){
								break;
							}
							else if ( e == 1 ){
								system("clear");
								while(1){
								int e1;
								printf("1:语文总分 2:语文平均分 3:语文最高分 4:语文最低分 5:退出\n");
									if ( scanf(" %d",&e1) == 1 ){
										if( e1 == 5 ){
											break;
										}
										else if( e1 == 1 ){
											system("clear");
											/*	statistics1-1(); 	语文总分*/
										}
										else if( e1 == 2 ){
											system("clear");
											/*	statistics1-2(); 	语文平均分*/
										}
										else if( e1 == 3 ){
											system("clear");
											/*	statistics1-3(); 	语文最高分*/
										}
										else if( e1 == 4 ){
											system("clear");
											/*	statistics1-4(); 	语文最低分*/
										}
										else{
											system("clear");
											printf("输入错误，没有该选项！\n");
										}
									}
									else{
										gets(error);
										system("clear");
										printf("输入错误，请重新输入!\n");
										e1=0;
										continue;
									}
								}	
							}
							else if ( e == 2 ){
								system("clear");
								while(1){
								int e2;
								printf("1:数学总分 2:数学平均分 3:数学最高分 4:数学最低分 5:退出\n");
									if ( scanf(" %d",&e2) == 1 ){
										if( e2 == 5 ){
											break;
										}
										else if( e2 == 1 ){
											system("clear");
											/*	statistics2-1(); 	数学总分*/
										}
										else if( e2 == 2 ){
											system("clear");
											/*	statistics2-2(); 	数学平均分*/
										}
										else if( e2 == 3 ){
											system("clear");
											/*	statistics2-3(); 	数学最高分*/
										}
										else if( e2 == 4 ){
											system("clear");
											/*	statistics2-4(); 	数学最低分*/
										}
										else{
											system("clear");
											printf("输入错误，没有该选项！\n");
										}
									}
									else{
										gets(error);
										system("clear");
										printf("输入错误，请重新输入!\n");
										e2=0;
										continue;
									}
								}
							}
							else if ( e == 3 ){
								system("clear");
								while(1){
								int e3;
								printf("1:英语总分 2:英语平均分 3:英语最高分 4:英语最低分 5:退出\n");
									if ( scanf(" %d",&e3) == 1 ){
										if( e3 == 5 ){
											break;
										}
										else if( e3 == 1 ){
											system("clear");
											/*	statistics3-1(); 	英语总分*/
										}
										else if( e3 == 2 ){
											system("clear");
											/*	statistics3-2(); 	英语平均分*/
										}
										else if( e3 == 3 ){
											system("clear");
											/*	statistics3-3(); 	英语最高分*/
										}
										else if( e3 == 4 ){
											system("clear");
											/*	statistics3-4(); 	英语最低分*/
										}
										else{
											system("clear");
											printf("输入错误，没有该选项！\n");
										}
									}
									else{
										gets(error);
										system("clear");
										printf("输入错误，请重新输入!\n");
										e3=0;
										continue;
									}
								}
							}
				}
				else{
					gets(error);
					system("clear");
					printf("输入错误，请重新输入6!\n");
					e=0;
					continue;
				}
			}
			break;
		}
		case 7:
			system("clear");
			printf("退出系统成功\n");
			return 0;   
		default:
			gets(error);
			printf("输入错误,请重新输入\n");
		}
	}
}
